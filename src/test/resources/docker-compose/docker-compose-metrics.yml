version: '3'
services:
  kong:
    image: kong:2.0.1
    user: kong
    depends_on:
    - kong-db
    environment:
    - KONG_ADMIN_ACCESS_LOG=/dev/stdout
    - KONG_ADMIN_ERROR_LOG=/dev/stderr
    - KONG_PROXY_ACCESS_LOG=/dev/stdout
    - KONG_PROXY_ERROR_LOG=/dev/stderr
    - KONG_ADMIN_LISTEN=0.0.0.0:8001
    - KONG_CASSANDRA_CONTACT_POINTS=kong-db
    - KONG_DATABASE=postgres
    - KONG_PG_DATABASE=kong
    - KONG_PG_HOST=kong-db
    - KONG_PG_PASSWORD=kong
    - KONG_PG_USER=kong
    healthcheck:
      test:
      - CMD
      - kong
      - health
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure
    ports:
    - 8000:8000
    - 8001:8001
    - 8443:8443
    - 8444:8444
    networks:
    - kong-network
  kong-db:
    image: postgres:12.1
    environment:
    - POSTGRES_DB=kong
    - POSTGRES_PASSWORD=kong
    - POSTGRES_USER=kong
    healthcheck:
      test:
      - CMD
      - pg_isready
      - -U
      - kong
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    stdin_open: true
    tty: true
    ports: []
    networks:
    - kong-network
  kong-migrations:
    image: kong:2.0.1
    command: kong migrations bootstrap && kong migrations up && kong migrations finish
    depends_on:
    - kong-db
    environment:
    - KONG_DATABASE=postgres
    - KONG_PG_DATABASE=kong
    - KONG_PG_HOST=kong-db
    - KONG_PG_PASSWORD=kong
    - KONG_PG_USER=kong
    restart: on-failure
    ports: []
    networks:
    - kong-network
  user:
    build: ./user
    ports:
    - 80:80
    - 81:81
    networks:
    - user-network
    - kong-network
  user-db:
    image: postgres:12.1
    environment:
    - PGUSER=postgres
    volumes:
    - ./user-db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports: []
    networks:
    - user-network
  grafana:
    image: grafana/grafana:6.6.2
    environment: []
    volumes:
    - ./grafana/provisioning:/etc/grafana/provisioning
    ports:
    - 3000:3000
    networks:
    - metrics-network
  prometheus:
    image: prom/prometheus:v2.16.0
    environment: []
    volumes:
    - ./prometheus:/etc/prometheus
    ports:
    - 9090:9090
    networks:
    - user-network
    - metrics-network
networks:
  user-network: {}
  kong-network: {}
  metrics-network: {}
