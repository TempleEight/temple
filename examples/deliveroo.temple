// Deliveroo is a food delivery service with riders, delivering dishes from restaurants to users.
Deliveroo: project {
    #language(go);
    #database(postgres);
    #provider(dockerCompose);
    #metrics(prometheus);
    #authMethod(email);
}

// Users order dishes, paid for with their billing account
User: service {
    firstName: string;
    lastName: string;
    email: string;
    address: string;
    billingAccount: Billing;
    #auth;
    // Implicit #readable(by:this)
    // Implicit #writable(by: this)
}

// Riders deliver orders - location so user knows where they are
Rider: service {
    firstName: string;
    lat: float(90.0, -90.0);
    long: float(180.0, -180.0);
    #auth;
    // Implicit #readable(by: this)
    // Implicit #writable(by: this)
}

// Restaurants make dishes to be picked up by riders
Restaurant: service {
    name: string;
    address: string;
    openTime: time;
    closeTime: time;
    #auth;
    #enumerable;
    #readable(by: all);
    // Implicit #writable(by: this)
}

// An order marks a dish to be delivered by a rider from a restaurant to a user
Order: service {
    user: User;
    restaurant: Restaurant;
    rider: Rider;
    address: string;
    orderTime: datetime @serverSet;
    status: string;

    // An order can have many dishes
    Food: struct {
        dish: Dish;
        #enumerable;
    }
    #enumerable;
    #writable(by:this);
    #omit[delete];
    // Implicit #readable(by:all)
}

// A dish is made by a restaurant and is delivered to a user
Dish: service {
    name: string;
    description: string;
    price: float(0.0);
    restaurant: Restaurant;

    Img: struct {
        data: data(4M);
        #enumerable;
    }
    #enumerable;
    #writable(by: this);
    // Implicit #readable(by: all)
}

// A billing account for a user, kept separately for security
Billing: service {
    creditCard: string(16,16); //creditCards must be exactly 16 chars long
    expiry: date;
    billingAddress: string;
    #readable(by: this);
    #writable(by: this);
}
